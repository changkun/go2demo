// Code generated by go2go; DO NOT EDIT.


//line future_test.go2:5
package future

//line future_test.go2:5
import (
//line future_test.go2:5
 "runtime"
//line future_test.go2:5
 "sync/atomic"
//line future_test.go2:5
 "testing"
//line future_test.go2:5
 "time"
//line future_test.go2:5
)

//line future_test.go2:12
func TestFuture(t *testing.T) {
	s := "done"
	f := instantiate୦୦Future୦string{}

	go func() {
		time.Sleep(time.Second)
		f.Put(s)
	}()

	if f.Get() != s {
		t.Fatalf("future failed")
	}
}

//line future_test.go2:24
type instantiate୦୦Future୦string struct {
//line future.go2:13
 value atomic.Value
}

//line future.go2:17
func (f *instantiate୦୦Future୦string,) Get() string {
	var v interface{}
	for ; v == nil; v = f.value.Load() {
		runtime.Gosched()
	}
	return v.(string)
}

func (f *instantiate୦୦Future୦string,) Put(v string,

//line future.go2:25
) {
	f.value.Store(interface{}(v))
}

//line future.go2:27
var _ = runtime.BlockProfile
//line future.go2:27
var _ = atomic.AddInt32
//line future.go2:27
var _ = testing.AllocsPerRun

//line future.go2:27
const _ = time.ANSIC
