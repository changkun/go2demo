// Copyright 2020 Changkun Ou. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package history

// This file contains an example of the early design of Go generics.
// 
// Design Proposal:
// Ian Lance Taylor. "Generalized Types In Go." golang/proposals, October 2013.
// https://github.com/golang/proposal/blob/master/design/15292/2013-10-gen.md
//
// Core Idea:
//
// 	gen [T] func F(arg0, arg1 T) T { ... }
// 	Type deduction for type constraints

gen [T] (
	func Max(arg0, arg1 T) T {
		if arg0.IsGreaterThan(arg1) { return arg0 }
		return arg1
	}

	type Greater interface {
		IsGreaterThan(T) bool
	}
)

type Int int
func (i Int) IsGreaterThan(j Int) bool {
	return i > j
}

func F() {
	a, b := 0, Int(1)
	m := Max(a, b) // 0 先被忽略，解析 b 时确认为 Int
	if m != b { panic("wrong max") }
}